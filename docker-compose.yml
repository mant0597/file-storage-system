version: '3.8'

services:
  backend1:
    build: ./backend
    container_name: backend1
    ports:
      - "5001:5000"
    environment:
      - PORT=5000
      - DB_URL=mongodb://mongo:27017/fileDB
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    depends_on:
      - mongo
      - minio
    networks:
      - app-network

  backend2:
    build: ./backend
    container_name: backend2
    ports:
      - "5002:5000"
    environment:
      - PORT=5000
      - DB_URL=mongodb://mongo:27017/fileDB
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    depends_on:
      - mongo
      - minio
    networks:
      - app-network

  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "3000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html
    depends_on:
      - backend1
      - backend2
    networks:
      - app-network

volumes:
  mongo_data:
  minio_data:

networks:
  app-network:
    driver: bridge